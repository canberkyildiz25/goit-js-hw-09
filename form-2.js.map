{"version":3,"file":"form-2.js","sources":["../src/form-2.js"],"sourcesContent":["const form = document.querySelector('.feedback-form');\nconst localStorageKey = 'feedback-form-state';\n\nif (form) {\n  // Save only the field that triggered the input event so other saved fields are not overwritten\n  function onInputSave(event) {\n    const { name, value } = event.target;\n    if (!name) return;\n\n    try {\n      const saved = JSON.parse(localStorage.getItem(localStorageKey)) || {};\n      // store trimmed value (remove leading/trailing spaces)\n      saved[name] = value.trim();\n      localStorage.setItem(localStorageKey, JSON.stringify(saved));\n    } catch (err) {\n      console.error('Error saving form state:', err);\n    }\n  }\n\n  // Load saved state safely (don't set 'undefined' into inputs)\n  function loadFormState() {\n    try {\n      const saved = JSON.parse(localStorage.getItem(localStorageKey));\n      if (saved && typeof saved === 'object') {\n        if (typeof saved.email === 'string') {\n          form.elements.email.value = saved.email;\n        }\n        if (typeof saved.message === 'string') {\n          form.elements.message.value = saved.message;\n        }\n      }\n    } catch (err) {\n      console.error('Error loading form state:', err);\n    }\n  }\n\n  // Listen for input on the whole form (delegation)\n  form.addEventListener('input', onInputSave);\n\n  // Handle form submission\n  form.addEventListener('submit', event => {\n    event.preventDefault();\n\n    const email = form.elements.email.value.trim();\n    const message = form.elements.message.value.trim();\n\n    if (!email || !message) {\n      // You can show user-facing validation here if desired\n      return;\n    }\n\n    // Both fields are present â€” log object, clear storage and reset form\n    console.log({ email, message });\n    localStorage.removeItem(localStorageKey);\n    form.reset();\n  });\n\n  // Populate form on load\n  document.addEventListener('DOMContentLoaded', loadFormState);\n}\n"],"names":["form","localStorageKey","onInputSave","event","name","value","saved","err","loadFormState","email","message"],"mappings":"wFAAA,MAAMA,EAAO,SAAS,cAAc,gBAAgB,EAC9CC,EAAkB,sBAExB,GAAID,EAAM,CAER,IAASE,EAAT,SAAqBC,EAAO,CAC1B,KAAM,CAAE,KAAAC,EAAM,MAAAC,GAAUF,EAAM,OAC9B,GAAKC,EAEL,GAAI,CACF,MAAME,EAAQ,KAAK,MAAM,aAAa,QAAQL,CAAe,CAAC,GAAK,GAEnEK,EAAMF,CAAI,EAAIC,EAAM,KAAI,EACxB,aAAa,QAAQJ,EAAiB,KAAK,UAAUK,CAAK,CAAC,CAC5D,OAAQC,EAAK,CACZ,QAAQ,MAAM,2BAA4BA,CAAG,CAC9C,CACF,EAGQC,EAAT,UAAyB,CACvB,GAAI,CACF,MAAMF,EAAQ,KAAK,MAAM,aAAa,QAAQL,CAAe,CAAC,EAC1DK,GAAS,OAAOA,GAAU,WACxB,OAAOA,EAAM,OAAU,WACzBN,EAAK,SAAS,MAAM,MAAQM,EAAM,OAEhC,OAAOA,EAAM,SAAY,WAC3BN,EAAK,SAAS,QAAQ,MAAQM,EAAM,SAGzC,OAAQC,EAAK,CACZ,QAAQ,MAAM,4BAA6BA,CAAG,CAC/C,CACF,EAGDP,EAAK,iBAAiB,QAASE,CAAW,EAG1CF,EAAK,iBAAiB,SAAUG,GAAS,CACvCA,EAAM,eAAc,EAEpB,MAAMM,EAAQT,EAAK,SAAS,MAAM,MAAM,OAClCU,EAAUV,EAAK,SAAS,QAAQ,MAAM,OAExC,CAACS,GAAS,CAACC,IAMf,QAAQ,IAAI,CAAE,MAAAD,EAAO,QAAAC,CAAS,CAAA,EAC9B,aAAa,WAAWT,CAAe,EACvCD,EAAK,MAAK,EACd,CAAG,EAGD,SAAS,iBAAiB,mBAAoBQ,CAAa,CAC7D"}